#head tag

<script src='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css' rel='stylesheet' />

mapboxgl.accessToken = 'your_access_token';
var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [longitude, latitude],
            zoom: 1
});



function initMap(latlong){
    if(latlong){
        var marker = [];
        latlong.forEach((value) => {
            var newMarker = {
                'type': 'Feature',
                'properties': {
                'description':`<div id ="properties_${value.propertyid}">
        					<a href="${value.link}" target="_blank" title="Click for more info"><img style="width:100%;height:150px" src="${value.image}"></a>
        					<h5>${value.propertyname}</h5>
        						<a href="${value.link}" target="_blank" title="Click for more info">
        							<p>${value.bedrooms} | ${value.baths} |  ${value.propertytype}</p>
        						</a>
        					</div>`,
                'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [parseFloat(value.proplatlong.longt), parseFloat(value.proplatlong.lat)]
                    }
                
            }
            marker.push(newMarker);
        })  //end foreach
        // console.log(marker);return false;
        
        
      map.addSource('places', {
            'type': 'geojson',
            'data': {
            'type': 'FeatureCollection',
            'features': marker
                
            }
        });
        
        // Add a layer showing the places.
        map.addLayer({
            'id': 'places',
            'type': 'symbol',
            'source': 'places',
            'layout': {
            'icon-image': '{icon}-15',
            'icon-allow-overlap': true
            }
        });
        
        // When a click event occurs on a feature in the places layer, open a popup at the
        // location of the feature, with description HTML from its properties.
        map.on('click', 'places', function(e) {
            var coordinates = e.features[0].geometry.coordinates.slice();
            var description = e.features[0].properties.description;
         
            // Ensure that if the map is zoomed out such that multiple
            // copies of the feature are visible, the popup appears
            // over the copy being pointed to.
            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
            }
             
            new mapboxgl.Popup()
            .setLngLat(coordinates)
            .setHTML(description)
            .addTo(map);
        });
        
        // Change the cursor to a pointer when the mouse is over the places layer.
        map.on('mouseenter', 'places', function() {
            map.getCanvas().style.cursor = 'pointer';
        });
         
        // Change it back to a pointer when it leaves.
        map.on('mouseleave', 'places', function() {
            map.getCanvas().style.cursor = '';
        });
                
                
    }
}
